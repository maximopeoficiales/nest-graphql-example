# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Todo {
  id: Int!
  description: String!
  done: Boolean!
}

type AgreggationsType {
  total: Int!
  pending: Int!
  completed: Int!
}

type Item {
  id: ID!
  name: String!
  quantity: Float!
  quantityUnit: String
}

type User {
  id: ID!
  fullName: String!
  email: String!
  roles: [String!]!
  isActive: Boolean!
  lastUpdateBy: User
}

type AuthResponse {
  token: String!
  user: User!
}

type Query {
  """Hola mundo es lo que retorna"""
  sayHelloWorld: String!

  """Retorna un numero aleatorio"""
  getRamdomNumber: Float!

  """Desde cero a argumento a predeterminado(6)"""
  getRamdomFromZeroTo(to: Int): Int!
  totalTodos: Int!
  completedTodos: Int!
  pendingTodos: Int!
  todos(
    """What needs to be done"""
    status: Boolean
  ): [Todo!]!
  todo(id: Int!): Todo!
  agreggations: AgreggationsType!
  items: [Item!]!
  item(id: String!): Item!
  users(roles: [ValidRoles!] = []): [User!]!
  user(id: ID!): User!
  revalidateToken: AuthResponse!
}

enum ValidRoles {
  admin
  user
  superUser
}

type Mutation {
  createTodo(createTodoInput: CreateTodoInput!): Todo!
  updateTodo(updateTodoInput: UpdateTodoInput!): Todo!
  deleteTodo(id: Int!): Boolean!
  createItem(createItemInput: CreateItemInput!): Item!
  updateItem(updateItemInput: UpdateItemInput!): Item!
  removeItem(id: String!): Boolean!
  blockUser(id: ID!): User!
  signin(signupInput: SignupInput!): AuthResponse!
  login(loginInput: LoginInput!): AuthResponse!
}

input CreateTodoInput {
  """What needs to be done"""
  description: String!
}

input UpdateTodoInput {
  id: Int!

  """What needs to be done"""
  description: String

  """Done todo?"""
  done: Boolean
}

input CreateItemInput {
  name: String!
  quantity: Float!
  quantityUnit: String
}

input UpdateItemInput {
  name: String
  quantity: Float
  quantityUnit: String
  id: Int!
}

input SignupInput {
  email: String!
  fullName: String!
  password: String!
}

input LoginInput {
  email: String!
  password: String!
}